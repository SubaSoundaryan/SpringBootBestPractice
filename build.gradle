plugins {
	id 'org.springframework.boot' version '2.0.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'com.best.practice'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//Springboot starter && Liquibase
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core:3.6.3'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'mysql:mysql-connector-java'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	ext.mapstructVersion = '1.3.1.Final'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	//openapi & swagger
	compile 'org.springdoc:springdoc-openapi-ui:1.3.2'
	compile 'org.springdoc:springdoc-openapi-security:1.3.2'


	testCompile group: 'junit', name: 'junit', version: '4.12'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	testImplementation 'org.junit.platform:junit-platform-commons:1.5.2'

	compile "org.codehaus.groovy:groovy-all:2.5.8"
	testCompile "org.spockframework:spock-core:1.1-groovy-2.4"

	testCompile platform("org.spockframework:spock-bom:2.0-M1-groovy-2.5")

	testImplementation("org.assertj:assertj-core:3.10.0")
	test {
		useJUnitPlatform()
	}

}
